@import "/src/shared/ui/styles/mixins.scss";

.container {
   display: inline-block;
   padding: 2px;
   border-radius: 20px;
   transition: all 0.15s linear;
   background: var(--gradientMain);

   &:disabled {
      filter: brightness(0.7);
   }

   &.minWidth {
      min-width: 125px;
   }

   &.uppercase {
      text-transform: uppercase;
   }
}

.content {
   display: flex;
   justify-content: center;
   align-items: center;
   gap: 10px;
   padding: 13px 15px;
   width: 100%;
   min-height: 100%;
   border-radius: 19px;
   transition: all 0.15s linear;

   &.icon {
      width: 49px;
      padding: 0;
      aspect-ratio: 1 / 1;
   }

   svg {
      flex-shrink: 1;
      width: 17px;
      height: auto;
      transition: all 0.15s linear;
   }
}

.outlined {
   &.secondary {
      .content {
         background-color: var(--secondaryMain);
         color: var(--secondaryText);
      }
      svg {
         fill: var(--secondaryText);
         stroke: var(--secondaryText);
      }
   }

   &.primary {
      .content {
         background-color: var(--primaryDark);
         color: var(--primaryText);
      }
      svg {
         fill: var(--secondaryText);
         stroke: var(--secondaryText);
      }
   }

   @include hoverEffect("&.defaultHover:hover:not(:disabled)") {
      .content {
         background-color: rgba(0, 0, 0, 0);
      }
   }
}

.gradient {
   .content{
      color: var(--primaryText);
   }
}

.filled {
   &.primary {
      box-shadow: 0px 0px 0px 5px var(--primaryDark) inset;

      .content {
         background-color: var(--primaryDark);
         color: var(--primaryText);
      }

      svg {
         fill: var(--primaryText);
         stroke: var(--primaryText);
      }
   }

   &.secondary {
      box-shadow: 0px 0px 0px 5px var(--secondaryMain) inset;

      .content {
         background-color: var(--secondaryMain);
         color: var(--secondaryText);
      }

      svg {
         fill: var(--secondaryText);
         stroke: var(--secondaryText);
      }
   }

   @include hoverEffect("&.defaultHover:hover:not(:disabled)") {
      box-shadow: 0px 0px 0px 5px rgba(0, 0, 0, 0) inset;
   }
}
